name: Generate Animation

permissions:
  contents: write  # Allow writing to repository contents (push code)
  actions: write   # Allow operating on Actions if needed

on:
  schedule:
    - cron: "0 */24 * * *"  # Runs every 24 hours
  workflow_dispatch:
  push:
    branches:
      - main  # 假设你的默认分支是 main，根据日志调整

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Checkout the output branch directly, ensuring a clean working directory
      - name: Checkout output branch
        uses: actions/checkout@v3
        with:
          ref: output  # 直接检出 output 分支
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # 获取完整历史记录，避免浅克隆问题

      # Set Git user identity
      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Generate the snake animation from GitHub contributions
      - name: Generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # List files in dist directory (for debugging)
      - name: List files in dist directory
        run: ls -R dist

      # Copy generated files to the root and commit
      - name: Update output branch with generated files
        run: |
          cp -r dist/* .
          git add .
          git commit -m "Update snake animation" || echo "No changes to commit"
          git push origin output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
